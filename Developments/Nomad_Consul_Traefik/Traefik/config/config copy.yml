http:
  routers:
    host:
      entryPoints: 
      - https
      service: service-host
      rule: Host(`host.service.test`) 
      tls:
        certResolver: letsEncrypt
  services:
    service-host:  
      loadBalancer:
        servers:
        - url: http://192.168.88.126:8600/
        passHostHeader: true 

### Роутеры ###
# * http-catchall — имя роутера, может быть любым, но обязано быть уникальным в рамках блока http всей конфигурации Traefik;
# * rule: — правило, описывает какой трафик попадает в этот роутер, в данном случае описывается HostRegexp, то есть поле Host запроса 
# должно попадать под регулярное выражение .+ (то есть любое), здесь мы видим специфику регулярных выражений в Traefik — оно должно 
# быть заключено в фигурные скобки и иметь наименование (host в данном случае), то есть синтаксис имеем вид {name:reg_exp};
# * entrypoints — массив описанных ранее точек входа, которые будут использоваться этим роутером, в нашем случае используем только http;
# * middlewares — массив промежуточных обработчиков, куда попадает трафик перед передачей к сервису (сервисы будут рассмотрены позднее).

### Промежуточные обработчики ###
# redirect-to-https — имя обработчика, может быть любым, но обязано быть уникальным в рамках блока http всей конфигурации Traefik;
# redirectScheme — тип обработчика, в данном случае изменение схемы запроса;
# scheme: https — вынуждает клиента использовать схему HTTPS при запросе к прокси;
# permanent: false — говорит клиенту что это не навсегда и может измениться в будущем.